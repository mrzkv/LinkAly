services:
  pg:
    image: postgres:latest
    container_name: redirect-postgres
    ports:
      - "8314:5432"
    env_file:
      - src/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - redirect-service-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      retries: 10
      timeout: 2s

  redirect_service:
    build: .
    container_name: redirect-service
    env_file:
      - src/.env
    depends_on:
      - pg
    ports:
      - "8001:8000"
    healthcheck:
      test: [ "CMD-SHELL", "curl", "-f", "http://localhost:8000/v1/api/redirect/health || exit 1" ]
      interval: 1s
      retries: 10
      start_period: 10s
      timeout: 2s
    networks:
      - redirect-service-network

  loki:
    image: grafana/loki:latest
    container_name: redirect-loki
    depends_on:
      - redirect_service
    ports:
      - "3101:3100"
    volumes:
      - ./docker/loki/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - redirect-service-network

  promtail:
      image: grafana/promtail:latest
      container_name: redirect-promtail
      depends_on:
        - redirect_service
      command: -config.file=/etc/promtail/config.yml
      volumes:
        - /var/lib/docker/containers:/var/lib/docker/containers:ro
        - /var/run/docker.sock:/var/run/docker.sock
        - ./docker/promtail/promtail-config.yaml:/etc/promtail/config.yml
      networks:
        - redirect-service-network

  prometheus:
    image: prom/prometheus:latest
    container_name: redirect-prometheus
    depends_on:
      - redirect_service
    ports:
      - "9091:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    networks:
      - redirect-service-network

  grafana:
    image: grafana/grafana:latest
    container_name: redirect-grafana
    depends_on:
      - prometheus
      - loki
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=root
      - GF_SECURITY_ADMIN_PASSWORD=root
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./docker/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./docker/grafana/provisioning:/etc/grafana/provisioning/dashboards:ro
      - grafanadata:/var/lib/grafana
    networks:
      - redirect-service-network

volumes:
  pgdata:
    name: redirect-service-pgdata
  grafanadata:
    name: redirect-service-grafanadata
  prometheusdata:
    name: redirect-service-prometheusdata

networks:
  redirect-service-network:
    name: redirect-service-network